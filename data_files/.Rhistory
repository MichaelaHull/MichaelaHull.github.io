educ_plt <- ggplot(p_educ, aes(x = educ, y = age, fill = educ)) + geom_boxplot()
plot(educ_plt)
library(foreign)
library(ggplot2)
#datapath <- "~/teaching/EDA_2014/grading/"
datapath <- "/Users/Aluminum/Documents/Exploratory Data Analysis/Homework 5/"
p <- read.spss(paste(datapath, "Omnibus_Nov_2010_Paid_Content.sav", sep = ""))
p <- data.frame(p)
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
#p_educ <- subset(p_educ, p_educ["educ"] != "<NA>")
p_educ <- subset(p_educ, p_educ$age < 99)
educ_plt <- ggplot(p_educ, aes(x = educ, y = age, fill = educ)) + geom_boxplot()
educ_plt
p <- read.spss(paste(datapath, "Omnibus_Nov_2010_Paid_Content.sav", sep = ""))
p <- data.frame(p)
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
p_educ <- subset(p, p_educ["educ"] != "<NA>")
p_educ <- subset(p_educ, p_educ$age < 99)
educ_plt <- ggplot(p_educ, aes(x = educ, y = age, fill = educ)) + geom_boxplot()
plot(educ_plt)
p <- read.spss(paste(datapath, "Omnibus_Nov_2010_Paid_Content.sav", sep = ""))
p <- data.frame(p)
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
p_educ <- subset(p, p["educ"] != "<NA>")
p_educ <- subset(p_educ, p_educ$age < 99)
educ_plt <- ggplot(p_educ, aes(x = educ, y = age, fill = educ)) + geom_boxplot()
plot(educ_plt)
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
p_educ <- subset(p, p["educ"] != "<NA>")
p_educ <- subset(p_educ, p_educ$age < 99)
educ_plt <- ggplot(p_educ, aes(x = educ, y = age, fill = educ)) + geom_boxplot()
educ_plt <- educ_plt + xlab("Level of Education Received") + ylab("Age") + main("Age Given Level of Education")
plot(educ_plt)
educ_plt <- educ_plt + xlab("Level of Education Received") + ylab("Age") + title("Age Given Level of Education")
educ_plt <- educ_plt + xlab("Level of Education Received") + ylab("Age") + title(main = "Age Given Level of Education")
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
p_educ <- subset(p, p["educ"] != "<NA>")
p_educ <- subset(p_educ, p_educ$age < 99)
educ_plt <- ggplot(p_educ, aes(x = educ, y = age, fill = educ)) + geom_boxplot()
educ_plt <- educ_plt + xlab("Level of Education Received") + ylab("Age") + title(main = "Age Given Level of Education")
plot(educ_plt)
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
p_educ <- subset(p, p["educ"] != "<NA>")
p_educ <- subset(p_educ, p_educ$age < 99)
educ_plt <- ggplot(p_educ, aes(x = educ, y = age, fill = educ)) + geom_boxplot()
educ_plt <- educ_plt + xlab("Level of Education Received") + ylab("Age")
plot(educ_plt)
white <- subset(p, p["race"] == "White")
head(white)
summary(ppay)
levels(white$inc)
inc_levels <- c("<$10,000", "$10,000-$20,000", "$20,000-$30,000", "$30,000-$40,000", "$40,000-$50,000", "$50,000-$75,000", "$75,000-$100,000", "$100,000-$150,000", ">$150,000", "<NA>")
levels(p$inc) <- inc_levels
white <- subset(p, p["race"] == "White")
white <- subset(white, white["inc"] != "<NA>")
black__aa <- subset(p, p["race"] == "Black or African-American")
black__aa <- subset(black_aa, black_aa["inc"] == "<NA>")
mixed <- subset(p, p["race"] == "Mixed race")
mixed <- subset(mixed, mixed["inc"] != "<NA>")
native <- subset(p, p["race"] == "Native American/American Indian")
native <- subset(native, native["inc"] != "<NA>")
asian <- subset(p, p["race"] == "Asian or Pacific Islander")
asian <- subset(asian, asian["inc"] != "<NA>")
other <- subset(p, p["race"] == "Other (SPECIFY")
other <- subset(other, other["inc"] != "<NA>")
inc_levels <- c("<$10,000", "$10,000-$20,000", "$20,000-$30,000", "$30,000-$40,000", "$40,000-$50,000", "$50,000-$75,000", "$75,000-$100,000", "$100,000-$150,000", ">$150,000", "<NA>")
levels(p$inc) <- inc_levels
white <- subset(p, p["race"] == "White")
white <- subset(white, white["inc"] != "<NA>")
black__aa <- subset(p, p["race"] == "Black or African-American")
black__aa <- subset(black_aa, black_aa["inc"] == "<NA>")
black_aa <- subset(p, p["race"] == "Black or African-American")
black_aa <- subset(black_aa, black_aa["inc"] == "<NA>")
mixed <- subset(p, p["race"] == "Mixed race")
mixed <- subset(mixed, mixed["inc"] != "<NA>")
native <- subset(p, p["race"] == "Native American/American Indian")
native <- subset(native, native["inc"] != "<NA>")
asian <- subset(p, p["race"] == "Asian or Pacific Islander")
asian <- subset(asian, asian["inc"] != "<NA>")
other <- subset(p, p["race"] == "Other (SPECIFY")
other <- subset(other, other["inc"] != "<NA>")
other <- subset(p, p["race"] == "Other (SPECIFY)"
)
other <- subset(other, other["inc"] != "<NA>")
length(white)
length(subset(white, white$inc == ">$10,000"))
unique(white$inc)
nrow(white)
nrow(subset(white, white$inc == ">$10,000"))
y <- ggplot(white, aes(x = inc))
y <- y + geom_histogram(fill = "white")
y <- y + geom_histogram(data = black_aa, aes(x = inc, fill = "blue"))
y <- y + geom_histogram(data = mixed, aes(x = inc, fill = "green"))
y <- y + geom_histogram(data = native, aes(x = inc, fill = "purple"))
y <- y + geom_histogram(data = asian, aes(x = inc, fill = "red"))
y
other <- subset(other, other["inc"] != "<NA>")
rnow(other)
nrow(other)
other
nrow(black_aa)
black_aa$inc
white <- subset(p, p["race"] == "White")
white <- subset(white, white["inc"] != "<NA>")
black_aa <- subset(p, p["race"] == "Black or African-American")
black_aa <- subset(black_aa, black_aa["inc"] != "<NA>")
mixed <- subset(p, p["race"] == "Mixed race")
mixed <- subset(mixed, mixed["inc"] != "<NA>")
native <- subset(p, p["race"] == "Native American/American Indian")
native <- subset(native, native["inc"] != "<NA>")
asian <- subset(p, p["race"] == "Asian or Pacific Islander")
asian <- subset(asian, asian["inc"] != "<NA>")
other <- subset(p, p["race"] == "Other (SPECIFY)")
other <- subset(other, other["inc"] != "<NA>")
inc_levels <- c("<$10,000", "$10,000-$20,000", "$20,000-$30,000", "$30,000-$40,000", "$40,000-$50,000", "$50,000-$75,000", "$75,000-$100,000", "$100,000-$150,000", "$150,000+", "<NA>")
levels(p$inc) <- inc_levels
pna <- subset(p, p$inc != "<NA>")
pna <- subset(p, p$race != "<NA>")
ggplot(pna, aes(x = inc)) + geom_histogram(color = race)
ggplot(pna, aes(x = inc, fill = race)) + geom_histogram()
ggplot(pna, aes(x = inc, fill = race)) + geom_density()
inc_levels <- c("5000", "15000", "25000", "35000", "45000", "62500", "87500", "125000", "150000", "<NA>")
levels(p$inc) <- inc_levels
pna <- subset(p, p$race != "<NA>")
pna <- subset(p, p$inc != "<NA>")
levels(p$race)
levels(p$race)[7] <- "<NA>"
levels(p$race)
pna <- subset(pna, pna$race != "<NA>")
as.integer("15")
for (i in 1:nrow(pna)){pna["inc"][i,] = as.integer(pna["inc"][i,])}
warnings()
levels(pna$inc)
inc_levels <- c("5000", "15000", "25000", "35000", "45000", "62500", "87500", "125000", "150000", "<NA>")
levels(p$inc) <- inc_levels
pna <- subset(p, p$inc != "<NA>")
pna <- subset(pna, pna$race != "<NA>")
head(pna$inc)
head(pna$race, pna$inc)
ggplot(pna, aes(x = inc, color = race)) + geom_density()
ggplot(pna, aes(x = inc, fille = race)) + geom_density()
ggplot(pna, aes(x = inc, fill = race)) + geom_density()
ggplot(p, aes(x = inc, y = age)) + boxplot(fill = inc)
ggplot(p, aes(x = inc, y = age, fill = inc)) + boxplot()
names(p)
ggplot(p, aes(x = cregion, y = age, fill = cregion)) + geom_boxplot()
ggplot(p, aes(x = iphoneuse, y = age, fill = iphoneuse)) + geom_boxplot()
ggplot(p, aes(x = emp, y = age, fill = emp)) + geom_boxplot()
p <- subset(p, age < 99)
ggplot(p, aes(x = emp, y = age, fill = emp)) + geom_boxplot()
ggplot(p, aes(x = emp, y = age, fill = race)) + geom_boxplot()
pt <- subset(p, p$race != "<NA>")
ggplot(pt, aes(x = emp, y = age, fill = race)) + geom_boxplot()
levels(p$emp)
levels(p$emp)[8] <- "<NA>"
levels(pt$emp)[8] <- "<NA>"
ggplot(pt, aes(x = emp, y = age, fill = race)) + geom_boxplot()
pt <- subset(pt, pt$emp != "<NA>")
ggplot(pt, aes(x = emp, y = age, fill = race)) + geom_boxplot()
nrow(subset(pt, pt$race == "Native American/American Indian"))
nrow(pt)
ggplot(pt, aes(x = inc, y = age, fill = race)) + geom_boxplot()
levels(p$sex)
ggplot(pt, aes(x = inc, y = age, fill = sex)) + geom_boxplot()
ps <- subset(p, p$inc != "<NA>")
ggplot(ps, aes(x = inc, y = age, fill = sex)) + geom_boxplot()
names(p)
ggplot(ps, aes(x = iphoneuse, y = age, fill = sex)) + geom_boxplot()
ggplot(ps, aes(x = educ, y = age, fill = sex)) + geom_boxplot()
pin <- subset(p, p$inc != "<NA>")
pin <- subset(pin, p$race, != "<NA>")
pin <- subset(pin, p$race != "<NA>")
ggplot(pin, aes(x = inc, fill = race)) + geom_bar()
pin <- subset(pin, p$inc != "<NA>")
ggplot(pin, aes(x = inc, fill = race)) + geom_bar()
pin <- subset(pin, pin$inc != "<NA>")
ggplot(pin, aes(x = inc, fill = race)) + geom_bar()
ggplot(pin, aes(x = inc, fill = race)) + geom_bar() + scale_y_continuous(labels = "percent")
pin1 <- subset(pin, pin$inc == levels(pin$inc)[1])
pin2 <- subset(pin, pin$inc == levels(pin$inc)[2])
pin3 <- subset(pin, pin$inc == levels(pin$inc)[3])
pin4 <- subset(pin, pin$inc == levels(pin$inc)[4])
pin5 <- subset(pin, pin$inc == levels(pin$inc)[5])
length(levels(pin$inc))
pin6 <- subset(pin, pin$inc == levels(pin$inc)[6])
pin7 <- subset(pin, pin$inc == levels(pin$inc)[7])
pin8 <- subset(pin, pin$inc == levels(pin$inc)[8])
pin9 <- subset(pin, pin$inc == levels(pin$inc)[9])
pin10 <- subset(pin, pin$inc == levels(pin$inc)[10])
p1 <- ggplot(pin1, aes(x = inc, fill = race)) + geom_bar()
p1
p1 <- ggplot(pin1, aes(x = race, fill = race)) + geom_bar()
p1
white <- subset(p, p["race"] == "White")
nrow(white)
names(p)
ggplot(p, aes( x = q6a, fill = sex)) + geom_bar()
ggplot(p, aes(x = race, y = age)) + geom_boxplot()
library(foreign)
library(ggplot2)
#datapath <- "~/teaching/EDA_2014/grading/"
datapath <- "/Users/Aluminum/Documents/Exploratory Data Analysis/Homework 5/"
p <- read.spss(paste(datapath, "Omnibus_Nov_2010_Paid_Content.sav", sep = ""))
p <- data.frame(p)
p <- subset(p, age < 99)
# Boxplot of education and age
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
levels(p$race)[7] <- "<NA>"
pr <- subset(p, p$race != "<NA>")
age_plt <- ggplot(pr, aes(x = race, y = age, fill = race))
age_plt <- age_plt + geom_bar()
plot(age_plt)
levels(p$race)[7] <- "<NA>"
pr <- subset(p, p$race != "<NA>")
age_plt <- ggplot(pr, aes(x = race, y = age, fill = race))
age_plt <- age_plt + geom_bar()
age_plt
age_plt <- age_plt + geom_boxplot()
plot(age_plt)
age_plt <- age_plt + xlab("Race") + ylab("Age")
plot(age_plt)
update.packages()
library(ggplot2)
plot(x = c(3.69, 3.79, 3.72, 3.72), y = c(32, 33, 35, 28))
lm1 <- lm(c(32, 33, 35, 28)~c(3.69, 3.79, 3.72, 3.72))
plot(x = c(3.69, 3.79, 3.72, 3.72), y = c(32, 33, 35, 28)) + abline(lm1[[1]][[2]], lm[[1]][[1]])
plot(x = c(3.69, 3.79, 3.72, 3.72), y = c(32, 33, 35, 28)) + abline(lm1[[1]][[2]], lm1[[1]][[1]])
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66), y = c(32, 33, 35, 28, 30, 28))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.69), y = c(32, 33, 35, 28, 30, 28, 31))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon'), main = '2. c) Price of Gasoline Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon'), main = '2. c) Price of Gasoline Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon'))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon)', main = '2. c) Price of Gasoline Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon)', main = '2. c) Gasoline Price Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon)', main = '2.c) Gasoline Price Does Not Correlate with Efficiency')
bar(x = c('1', '2', '3', '4', '5', '6'), y = c(33, 34, 35, 31, 32, 31))
barchart(x = c('1', '2', '3', '4', '5', '6'), y = c(33, 34, 35, 31, 32, 31))
barplot(x = c('1', '2', '3', '4', '5', '6'), y = c(33, 34, 35, 31, 32, 31))
barplot(c(33, 34, 35, 31, 32, 31))
div <- c(33, 34, 35, 31, 32, 31)
div <- as.data.frame(div)
div
barplot(div)
barplot(div$div)
barplot(div$div, xlab = 'Divisions', ylab = 'Turnover Rate (%)', main = '2.d) Similar Turnover Rates in All Divisions')
barplot(div$div, ylab = 'Turnover Rate (%)', main = '2.d) Similar Turnover Rates in All Divisions')
install.packages('rpart')
install.packages('caret')
packages.install('rpart')
package.install('rpart')
install.package('rpart')
install.packages('rpart')
install.packages('tree')
update.packates()
update.packages()
library(rattle)
install.packages('rattle')
library(rattle)
library(tree)
library(rpart)
ds <- weather
summary(weather)
head(weather)
target <- "RainTomorrow"
nobs   <- nrow(ds)
form   <- formula(paste(target, "~ ."))
samp_size <- floor(0.8 * nobs)
set.seed(42)
train_idx <- sample(seq_len(nrow(ds)),size=samp_size)
drop_vars   <- -c(1,2,23) #variables to remove
ds <- ds[,drop_vars]
head(ds)
train <- ds[train_idx,]
test <- ds[-train_idx,]
model  <- rpart(form, train, parms=list(split="information"))
model
plot(model)  #just builds branches
text(model)  #puts the labels on
fancyRpartPlot(model)
install.packages(rpart)
install.packages('rpart')
install.packages("rpart")
install.packages("rpart")
install.packages('rpart.plot')
library(rpart.plot)
fancyRpartPlot(model)
?rpart.plot
summary(model)
preds <- predict(model, data=test)
preds[1]
preds[1:5]
test[1:5, 'RainTomorrow']
head(preds)
install.packages('foreign')
install.packages('xlsx')
install.packages('reshape2')
install.packages('GGally')
15*17*(.3**2/14 + .15**2/13 + 0.1**2/12 + 0.05**2/11)
install.packages('dplyr')
?data.table
install.packages('data')
install.packages('data.table')
9/14*2*7/9*2/9 + 5/14*2*3/5*2/5
9/14*2*6/9*3/9 + 5/14*2*3/5*2/5
4/14*2*3/4*1/4 + 6/14*2*4/6*2/6 + 4/14*2*2/4*2/4
4/14*2*3/4*1/4 + 10/14*2*6/10*
4/10
4/14*2*3/4*1/4 + 10/14*2*6/10*4/10
6/14*2*3/6*3/6 + 8/14*2*6/8*2/8
library(foreign)
library(xlsx)
library(reshape2)
library(ggplot2)
library(GGally)
library(rattle)
library(tree)
library(rpart)
head(iris)
head(digits)
head(digitstoy)
head(digits_toy)
head(digitsToy)
sklearn.datasets.load_digits(n_class=10)
install.packages('sklearn')
install.packages('scikit-learn')
install.packages('scikitlearn')
install.packages('sklearn.datasets')
head(digits(n_class=10))
head(digits[n_class=10])
library(polyroot)
?grep
runif(6, 1, 2)
sample(1:2, 6)
sample(1:2)
sample(1:2)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 6, replace = T)
sample(1:2, 6, replace = T)
sample(1:2, 6, replace = T)
sqrt(0.5**2 + 3.5**2)
update.program()
program.update()
update.programs()
install.packages()
update.packages()
?lm
?glm
164**2
(1-0.02)**2
164*.9604
(164*.9604)**2
(0.02*0.97 + 0.03*0.98)*(164**2)
((0.02*0.97 + 0.03*0.98)*(164))**2
((0.02*0.95 + 0.05*0.98)*(1.64/0.03))**2
(0.02*0.95 + 0.05*0.98)*((1.64/0.03)**2)
library(stats)
library(psych)
library(xtable)
setwd('/Users/Aluminum/Documents/Multivariate Statistics')
data <- read.csv('OAKLX_Monthly_Returns.csv')
head(data)
data <- read.csv('OAKLX_Monthly_Returns.csv', header = FALSE)
ff <- read.csv('F-F_Research_Data_Factors.csv')
ff <- read.csv('F-F_Research_Data_Factors.txt')
ff <- read.csv('F-F_Research_Data_Factors.txt', -3, sep = "\t")
head(ff)
ff <- read.csv('F-F_Research_Data_Factors.txt', -1:3, sep = "\t")
ff <- read.csv('F-F_Research_Data_Factors.txt', -c(1:3), sep = "\t")
head(ff)
ff <- read.csv('F-F_Research_Data_Factors.txt', -1, -2, -3, sep = "\t")
ff <- read.csv('F-F_Research_Data_Factors.txt', sep = "\t")
ff <- read.csv('F-F_Research_Data_Factors.txt', -1, -2, -3, sep = "\t")
ff <- read.csv('F-F_Research_Data_Factors.txt', sep = "\t")
head(ff)
ff[1, ]
ff[2, ]
ff[3, ]
ff <- read.csv('F-F_Research_Data_Factors.txt', skip = 3, sep = "\t")
head(ff)
names(ff)
ff <- read.csv('F-F_Research_Data_Factors.txt', skip = 4, sep = "\t")
library(data.table)
ff <- fread('F-F_Research_Data_Factors.txt', skip = 3)
head(ff)
ff <- fread('F-F_Research_Data_Factors.txt')
head(ff)
ff <- read.txt('F-F_Research_Data_Factors.txt', skip = 4)
ff <- read.table('F-F_Research_Data_Factors.txt', skip = 4)
head(ff)
ff <- read.table('F-F_Research_Data_Factors.txt', skip = 4, nrow = 1156)
ff <- read.table('F-F_Research_Data_Factors.txt', skip = 4, nrow = 1065)
ff[1065, ]
ff <- read.table('F-F_Research_Data_Factors.txt', skip = 4, nrow = 1065, header = FALSE)
ff[1065, ]
names(ff) <- c('id', 'Mkt-RF', 'SMB', 'HML', 'RF')
head(data)
ff2 <- read.table('F-F_Research_Data_Factors.txt', skip = 1072, nrow = 88, header = FALSE)
head(ff)
head(ff2)
library(sqldf)
names(ff2) <- c('id', 'Mkt-RF', 'SMB', 'HML', 'RF')
joined <- sqldf("SELECT * FROM data LEFT JOIN ff2 ON data.V1 - ff2.id")
head(joined)
length(unique(ff2$id))
length(unique(data$V1))
88*131
joined <- sqldf("SELECT * FROM data LEFT JOIN ff2 ON data.V1 = ff2.id")
head(joined)
joined <- sqldf("SELECT * FROM data LEFT JOIN ff ON data.V1 = ff.id")
head(joined)
length(unique(ff$id))
library(dplyr)
joined <- select(joined, c(1:2, 4:7))
names(joined) <- c('id', 'V2', 'Mkt-RF', 'SMB', 'HML', 'RF')
joined <- data.frame(joined)
names(joined) <- c('id', 'oaklx', 'Mkt-RF', 'SMB', 'HML', 'RF')
joined <- mutate(joined, dv = oaklx - RF)
form <- formula(dv ~ Mkt-RF + SMB + HML)
fit <- lm(form, data = joined)
names(joined) <- c('id', 'oaklx', 'MktRF', 'SMB', 'HML', 'RF')
head(joined)
joined <- sqldf("SELECT * FROM data LEFT JOIN ff ON data.V1 = ff.id")
joined <- select(joined, c(1:2, 4:7))
names(joined) <- c('id', 'oaklx', 'MktRF', 'SMB', 'HML', 'RF')
joined <- data.frame(joined)
joined <- mutate(joined, dv = oaklx - RF)
form <- formula(dv ~ Mkt-RF + SMB + HML)
fit <- lm(form, data = joined)
form <- formula(dv ~ MktRF + SMB + HML)
fit <- lm(form, data = joined)
fit
summary(fit)
pairs(joined)
setwd('/Users/Aluminum/Documents/MichaelaHull.GitHub.io/data_files')
library(data.table)
library(dplyr)
library(ggplot2)
library(ifultools)
library(lubridate)
library(sqldf)
data <- fread('sfpd_incidents_2014.csv')
head(data)
ggplot() + geom_histogram(data = data, aes(x = gen_cat))
o <- filter(data, Category == 'Other')
o <- filter(data, Category == 'Other offenses')
o <- filter(data, gen_cat == 'Other')
ggplot() + geom_histogram(data = o, aes(x = Category))
ts_data <- mutate(data, southern = 0)
ts_data <- mutate(ts_data, mission = 0)
ts_data <- mutate(ts_data, northern = 0)
ts_data <- mutate(ts_data, central = 0)
ts_data <- mutate(ts_data, bayview = 0)
ts_data <- mutate(ts_data, ingleside = 0)
ts_data <- mutate(ts_data, tenderloin = 0)
ts_data <- mutate(ts_data, taraval = 0)
ts_data <- mutate(ts_data, park = 0)
ts_data <- mutate(ts_data, richmond = 0)
southern <- filter(ts_data, PdDistrict == "Southern")
southern$southern = 1
mission <- filter(ts_data, PdDistrict == "Mission")
mission$mission = 1
northern <- filter(ts_data, PdDistrict == "Northern")
northern$northern = 1
central <- filter(ts_data, PdDistrict == "Central")
central$central = 1
bayview <- filter(ts_data, PdDistrict == "Bayview")
bayview$bayview = 1
ingleside <- filter(ts_data, PdDistrict == "Ingleside")
ingleside$ingleside = 1
tenderloin <- filter(ts_data, PdDistrict == "Tenderloin")
tenderloin$tenderloin = 1
taraval <- filter(ts_data, PdDistrict == "Taraval")
taraval$taraval = 1
park <- filter(ts_data, PdDistrict == "Park")
park$park = 1
richmond <- filter(ts_data, PdDistrict == "Richmond")
richmond$richmond = 1
ts_data <- rbind(southern, mission, northern, central, bayview, ingleside, tenderloin, taraval, park, richmond)
ts <- sqldf('SELECT Date, SUM(southern), SUM(mission), SUM(northern), SUM(central), SUM(bayview), SUM(ingleside),
SUM(tenderloin), SUM(taraval), SUM(bayview), SUM(ingleside) FROM ts_data GROUP BY Date')
ts <- sqldf('SELECT Date, SUM(southern), SUM(mission), SUM(northern), SUM(central), SUM(bayview), SUM(ingleside),
SUM(tenderloin), SUM(taraval), SUM(park), SUM(richmond) FROM ts_data GROUP BY Date')
length(unique(data$PdDistrict))
names(ts) <- c('Date', 'Southern', 'Mission', 'Northern', 'Central', 'Bayview', 'Ingleside',
'Tenderloin', 'Taraval', 'Park', 'Richmond')
write.csv(ts, 'sfpd_incidents_2014_ts_neighborhoods.csv', row.names = FALSE)
head(ts)
theft_names <- c("EXTORTION", "BAD CHECKS", "BRIBERY", "EMBEZZLEMENT", "FORGERY/COUNTERFEITING", "STOLEN PROPERTY",
"FRAUD", "ROBBERY", "BURGLARY", "VEHICLE THEFT", "LARCENY/THEFT")
controlled_names <- c("LIQUOR LAWS", "DRUG/NARCOTIC", "DRUNKENNESS", "DRIVING UNDER THE INFLUENCE", "WEAPON LAWS")
assault_names <- c("SEX OFFENSES, NON FORCIBLE", "SUICIDE", "ARSON", "SEX OFFENSES, FORCIBLE", "ASSAULT")
kidnapping_names <- c("RUNAWAY", "KIDNAPPING", "MISSING PERSON")
conduct_names <- c("VANDALISM", "SUSPICIOUS OCC", "TRESPASS", "DISORDERLY CONDUCT", "LOITERING",
"GAMBLING", "PROSTITUTION")
other_names <- c("OTHER OFFENSES", "WARRANTS", "NON-CRIMINAL", "SECONDARY CODES", "FAMILY OFFENSES",
"PORNOGRAPHY/OBSCENE MAT")
theft <- filter(data, Category %in% theft_names)
theft <- filter(data, gen_cat == "Theft")
